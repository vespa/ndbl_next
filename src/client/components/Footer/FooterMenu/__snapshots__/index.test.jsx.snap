// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Component: FooterMenu] should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FooterMenu
    links={
      Array [
        Object {
          "href": "/",
          "text": "Home",
        },
      ]
    }
    title="test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <h3
          className={undefined}
        >
          test
        </h3>,
        <ul
          className={undefined}
        >
          <li>
            <Link
              href="/"
            >
              <a
                href="/"
              >
                Home
              </a>
            </Link>
          </li>
        </ul>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "test",
          "className": undefined,
        },
        "ref": null,
        "rendered": "test",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              <Link
                href="/"
              >
                <a
                  href="/"
                >
                  Home
                </a>
              </Link>
            </li>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "Home",
            "nodeType": "host",
            "props": Object {
              "children": <Link
                href="/"
              >
                <a
                  href="/"
                >
                  Home
                </a>
              </Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <a
                  href="/"
                >
                  Home
                </a>,
                "href": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Home",
                  "href": "/",
                },
                "ref": null,
                "rendered": "Home",
                "type": "a",
              },
              "type": [Function],
            },
            "type": "li",
          },
        ],
        "type": "ul",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <h3
            className={undefined}
          >
            test
          </h3>,
          <ul
            className={undefined}
          >
            <li>
              <Link
                href="/"
              >
                <a
                  href="/"
                >
                  Home
                </a>
              </Link>
            </li>
          </ul>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "test",
            "className": undefined,
          },
          "ref": null,
          "rendered": "test",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li>
                <Link
                  href="/"
                >
                  <a
                    href="/"
                  >
                    Home
                  </a>
                </Link>
              </li>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "Home",
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  href="/"
                >
                  <a
                    href="/"
                  >
                    Home
                  </a>
                </Link>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <a
                    href="/"
                  >
                    Home
                  </a>,
                  "href": "/",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Home",
                    "href": "/",
                  },
                  "ref": null,
                  "rendered": "Home",
                  "type": "a",
                },
                "type": [Function],
              },
              "type": "li",
            },
          ],
          "type": "ul",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
