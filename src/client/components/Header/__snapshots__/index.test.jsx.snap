// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Component: Header] should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    img="open"
    subtitle="test 2"
    title="test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className={undefined}
      >
        <div
          className="undefined undefined "
        />
        <div
          className={undefined}
        >
          <h1
            className={undefined}
          >
            test
          </h1>
          <h2
            className={undefined}
          >
            test 2
          </h2>
        </div>
      </div>,
      "className": "
      undefined undefined
    ",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="undefined undefined "
          />,
          <div
            className={undefined}
          >
            <h1
              className={undefined}
            >
              test
            </h1>
            <h2
              className={undefined}
            >
              test 2
            </h2>
          </div>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "undefined undefined ",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className={undefined}
              >
                test
              </h1>,
              <h2
                className={undefined}
              >
                test 2
              </h2>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
                "className": undefined,
              },
              "ref": null,
              "rendered": "test",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test 2",
                "className": undefined,
              },
              "ref": null,
              "rendered": "test 2",
              "type": "h2",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className={undefined}
        >
          <div
            className="undefined undefined "
          />
          <div
            className={undefined}
          >
            <h1
              className={undefined}
            >
              test
            </h1>
            <h2
              className={undefined}
            >
              test 2
            </h2>
          </div>
        </div>,
        "className": "
      undefined undefined
    ",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="undefined undefined "
            />,
            <div
              className={undefined}
            >
              <h1
                className={undefined}
              >
                test
              </h1>
              <h2
                className={undefined}
              >
                test 2
              </h2>
            </div>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "undefined undefined ",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1
                  className={undefined}
                >
                  test
                </h1>,
                <h2
                  className={undefined}
                >
                  test 2
                </h2>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test",
                  "className": undefined,
                },
                "ref": null,
                "rendered": "test",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test 2",
                  "className": undefined,
                },
                "ref": null,
                "rendered": "test 2",
                "type": "h2",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
