// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[Component: MessageBox] should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MessageBox />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="
          undefined
        "
        >
          <div
            className="
            undefined
            undefined
          "
          >
            message
          </div>
        </div>,
        <div
          className="
          undefined
          undefined
        "
        >
          1
        </div>,
      ],
      "className": "undefined",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="
            undefined
            undefined
          "
          >
            message
          </div>,
          "className": "
          undefined
        ",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "message",
            "className": "
            undefined
            undefined
          ",
          },
          "ref": null,
          "rendered": "message",
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "1",
          "className": "
          undefined
          undefined
        ",
        },
        "ref": null,
        "rendered": "1",
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="
          undefined
        "
          >
            <div
              className="
            undefined
            undefined
          "
            >
              message
            </div>
          </div>,
          <div
            className="
          undefined
          undefined
        "
          >
            1
          </div>,
        ],
        "className": "undefined",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="
            undefined
            undefined
          "
            >
              message
            </div>,
            "className": "
          undefined
        ",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "message",
              "className": "
            undefined
            undefined
          ",
            },
            "ref": null,
            "rendered": "message",
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "1",
            "className": "
          undefined
          undefined
        ",
          },
          "ref": null,
          "rendered": "1",
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
